name: Build Docker

on:
  push:
    branches:
      - "flutter-*-tizen"
    paths:
      - ".github/workflows/build-docker.yml"
      - "ci/tizen/docker/**"
      - "DEPS"
  workflow_dispatch:

jobs:
  builder:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v2
        with:
          context: ci/tizen/docker
          file: ci/tizen/docker/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/build-engine:latest

  testbed:
    runs-on: ubuntu-latest
    steps:
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build and push
        env:
          REPO_URL: http://download.tizen.org/releases/milestone/tizen/unified
          BUILD_ID: tizen-unified_20211014.1
          IMAGE: tizen-headed-armv7l
        run: |
          wget -q ${REPO_URL}/${BUILD_ID}/images/standard/${IMAGE}/${BUILD_ID}_${IMAGE}.tar.gz
          tar -zxf ${BUILD_ID}_${IMAGE}.tar.gz
          mkdir rootfs
          sudo mount rootfs.img rootfs
          sudo tar -cC rootfs . | docker import - ghcr.io/${{ github.repository_owner }}/${IMAGE}
          sudo umount rootfs
          docker push ghcr.io/${{ github.repository_owner }}/${IMAGE}:latest
